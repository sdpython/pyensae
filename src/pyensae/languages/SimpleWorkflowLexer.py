# Generated from \SimpleWorkflow.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4, 0, 41, 267, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5,
        2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2,
        13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7,
        19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2,
        26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7,
        32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2,
        39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7,
        45, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1,
        5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1,
        10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1,
        17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1,
        21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1,
        26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1,
        29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1,
        31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 4, 33, 200, 8,
        33, 11, 33, 12, 33, 201, 1, 34, 1, 34, 5, 34, 206, 8, 34, 10, 34, 12, 34, 209, 9, 34,
        1, 35, 1, 35, 1, 36, 1, 36, 3, 36, 215, 8, 36, 1, 37, 1, 37, 1, 37, 1, 37, 5, 37, 221, 8,
        37, 10, 37, 12, 37, 224, 9, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 5, 38, 232, 8,
        38, 10, 38, 12, 38, 235, 9, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41,
        3, 41, 245, 8, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 5, 44, 253, 8, 44, 10, 44,
        12, 44, 256, 9, 44, 1, 44, 3, 44, 259, 8, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45,
        1, 45, 1, 254, 0, 46, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21,
        11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
        22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65,
        33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 0, 81, 0, 83, 0, 85, 0, 87, 0,
        89, 40, 91, 41, 1, 0, 6, 2, 0, 43, 43, 45, 45, 1, 0, 39, 39, 1, 0, 34, 34, 1, 0, 48, 57,
        4, 0, 65, 90, 95, 95, 97, 122, 128, 255, 3, 0, 9, 10, 13, 13, 32, 32, 271, 0, 1, 1, 0,
        0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0,
        0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0,
        0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0,
        0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0,
        0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0,
        0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0,
        0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0,
        0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0,
        1, 93, 1, 0, 0, 0, 3, 95, 1, 0, 0, 0, 5, 99, 1, 0, 0, 0, 7, 101, 1, 0, 0, 0, 9, 105, 1, 0, 0,
        0, 11, 107, 1, 0, 0, 0, 13, 110, 1, 0, 0, 0, 15, 112, 1, 0, 0, 0, 17, 114, 1, 0, 0, 0, 19,
        116, 1, 0, 0, 0, 21, 119, 1, 0, 0, 0, 23, 124, 1, 0, 0, 0, 25, 126, 1, 0, 0, 0, 27, 128,
        1, 0, 0, 0, 29, 130, 1, 0, 0, 0, 31, 132, 1, 0, 0, 0, 33, 134, 1, 0, 0, 0, 35, 136, 1, 0,
        0, 0, 37, 139, 1, 0, 0, 0, 39, 142, 1, 0, 0, 0, 41, 145, 1, 0, 0, 0, 43, 148, 1, 0, 0, 0,
        45, 151, 1, 0, 0, 0, 47, 154, 1, 0, 0, 0, 49, 156, 1, 0, 0, 0, 51, 158, 1, 0, 0, 0, 53, 160,
        1, 0, 0, 0, 55, 168, 1, 0, 0, 0, 57, 171, 1, 0, 0, 0, 59, 174, 1, 0, 0, 0, 61, 176, 1, 0,
        0, 0, 63, 187, 1, 0, 0, 0, 65, 196, 1, 0, 0, 0, 67, 199, 1, 0, 0, 0, 69, 203, 1, 0, 0, 0,
        71, 210, 1, 0, 0, 0, 73, 214, 1, 0, 0, 0, 75, 216, 1, 0, 0, 0, 77, 227, 1, 0, 0, 0, 79, 238,
        1, 0, 0, 0, 81, 240, 1, 0, 0, 0, 83, 244, 1, 0, 0, 0, 85, 246, 1, 0, 0, 0, 87, 248, 1, 0,
        0, 0, 89, 250, 1, 0, 0, 0, 91, 263, 1, 0, 0, 0, 93, 94, 5, 59, 0, 0, 94, 2, 1, 0, 0, 0, 95,
        96, 5, 115, 0, 0, 96, 97, 5, 101, 0, 0, 97, 98, 5, 116, 0, 0, 98, 4, 1, 0, 0, 0, 99, 100,
        5, 61, 0, 0, 100, 6, 1, 0, 0, 0, 101, 102, 5, 102, 0, 0, 102, 103, 5, 111, 0, 0, 103, 104,
        5, 114, 0, 0, 104, 8, 1, 0, 0, 0, 105, 106, 5, 40, 0, 0, 106, 10, 1, 0, 0, 0, 107, 108,
        5, 105, 0, 0, 108, 109, 5, 110, 0, 0, 109, 12, 1, 0, 0, 0, 110, 111, 5, 41, 0, 0, 111,
        14, 1, 0, 0, 0, 112, 113, 5, 123, 0, 0, 113, 16, 1, 0, 0, 0, 114, 115, 5, 125, 0, 0, 115,
        18, 1, 0, 0, 0, 116, 117, 5, 105, 0, 0, 117, 118, 5, 102, 0, 0, 118, 20, 1, 0, 0, 0, 119,
        120, 5, 101, 0, 0, 120, 121, 5, 108, 0, 0, 121, 122, 5, 115, 0, 0, 122, 123, 5, 101,
        0, 0, 123, 22, 1, 0, 0, 0, 124, 125, 5, 44, 0, 0, 125, 24, 1, 0, 0, 0, 126, 127, 5, 43,
        0, 0, 127, 26, 1, 0, 0, 0, 128, 129, 5, 45, 0, 0, 129, 28, 1, 0, 0, 0, 130, 131, 5, 42,
        0, 0, 131, 30, 1, 0, 0, 0, 132, 133, 5, 47, 0, 0, 133, 32, 1, 0, 0, 0, 134, 135, 5, 37,
        0, 0, 135, 34, 1, 0, 0, 0, 136, 137, 5, 38, 0, 0, 137, 138, 5, 38, 0, 0, 138, 36, 1, 0,
        0, 0, 139, 140, 5, 124, 0, 0, 140, 141, 5, 124, 0, 0, 141, 38, 1, 0, 0, 0, 142, 143, 5,
        61, 0, 0, 143, 144, 5, 61, 0, 0, 144, 40, 1, 0, 0, 0, 145, 146, 5, 33, 0, 0, 146, 147,
        5, 61, 0, 0, 147, 42, 1, 0, 0, 0, 148, 149, 5, 60, 0, 0, 149, 150, 5, 61, 0, 0, 150, 44,
        1, 0, 0, 0, 151, 152, 5, 62, 0, 0, 152, 153, 5, 61, 0, 0, 153, 46, 1, 0, 0, 0, 154, 155,
        5, 62, 0, 0, 155, 48, 1, 0, 0, 0, 156, 157, 5, 60, 0, 0, 157, 50, 1, 0, 0, 0, 158, 159,
        5, 33, 0, 0, 159, 52, 1, 0, 0, 0, 160, 161, 5, 99, 0, 0, 161, 162, 5, 111, 0, 0, 162, 163,
        5, 110, 0, 0, 163, 164, 5, 110, 0, 0, 164, 165, 5, 101, 0, 0, 165, 166, 5, 99, 0, 0, 166,
        167, 5, 116, 0, 0, 167, 54, 1, 0, 0, 0, 168, 169, 5, 116, 0, 0, 169, 170, 5, 111, 0, 0,
        170, 56, 1, 0, 0, 0, 171, 172, 5, 45, 0, 0, 172, 173, 5, 62, 0, 0, 173, 58, 1, 0, 0, 0,
        174, 175, 5, 46, 0, 0, 175, 60, 1, 0, 0, 0, 176, 177, 5, 102, 0, 0, 177, 178, 5, 108,
        0, 0, 178, 179, 5, 111, 0, 0, 179, 180, 5, 119, 0, 0, 180, 181, 5, 109, 0, 0, 181, 182,
        5, 111, 0, 0, 182, 183, 5, 100, 0, 0, 183, 184, 5, 117, 0, 0, 184, 185, 5, 108, 0, 0,
        185, 186, 5, 101, 0, 0, 186, 62, 1, 0, 0, 0, 187, 188, 5, 102, 0, 0, 188, 189, 5, 108,
        0, 0, 189, 190, 5, 111, 0, 0, 190, 191, 5, 119, 0, 0, 191, 192, 5, 100, 0, 0, 192, 193,
        5, 97, 0, 0, 193, 194, 5, 116, 0, 0, 194, 195, 5, 97, 0, 0, 195, 64, 1, 0, 0, 0, 196, 197,
        5, 101, 0, 0, 197, 66, 1, 0, 0, 0, 198, 200, 3, 85, 42, 0, 199, 198, 1, 0, 0, 0, 200, 201,
        1, 0, 0, 0, 201, 199, 1, 0, 0, 0, 201, 202, 1, 0, 0, 0, 202, 68, 1, 0, 0, 0, 203, 207, 3,
        87, 43, 0, 204, 206, 3, 83, 41, 0, 205, 204, 1, 0, 0, 0, 206, 209, 1, 0, 0, 0, 207, 205,
        1, 0, 0, 0, 207, 208, 1, 0, 0, 0, 208, 70, 1, 0, 0, 0, 209, 207, 1, 0, 0, 0, 210, 211, 7,
        0, 0, 0, 211, 72, 1, 0, 0, 0, 212, 215, 3, 75, 37, 0, 213, 215, 3, 77, 38, 0, 214, 212,
        1, 0, 0, 0, 214, 213, 1, 0, 0, 0, 215, 74, 1, 0, 0, 0, 216, 222, 5, 34, 0, 0, 217, 221,
        3, 81, 40, 0, 218, 219, 5, 92, 0, 0, 219, 221, 5, 34, 0, 0, 220, 217, 1, 0, 0, 0, 220,
        218, 1, 0, 0, 0, 221, 224, 1, 0, 0, 0, 222, 220, 1, 0, 0, 0, 222, 223, 1, 0, 0, 0, 223,
        225, 1, 0, 0, 0, 224, 222, 1, 0, 0, 0, 225, 226, 5, 34, 0, 0, 226, 76, 1, 0, 0, 0, 227,
        233, 5, 39, 0, 0, 228, 232, 3, 79, 39, 0, 229, 230, 5, 92, 0, 0, 230, 232, 5, 39, 0, 0,
        231, 228, 1, 0, 0, 0, 231, 229, 1, 0, 0, 0, 232, 235, 1, 0, 0, 0, 233, 231, 1, 0, 0, 0,
        233, 234, 1, 0, 0, 0, 234, 236, 1, 0, 0, 0, 235, 233, 1, 0, 0, 0, 236, 237, 5, 39, 0, 0,
        237, 78, 1, 0, 0, 0, 238, 239, 8, 1, 0, 0, 239, 80, 1, 0, 0, 0, 240, 241, 8, 2, 0, 0, 241,
        82, 1, 0, 0, 0, 242, 245, 3, 87, 43, 0, 243, 245, 3, 85, 42, 0, 244, 242, 1, 0, 0, 0, 244,
        243, 1, 0, 0, 0, 245, 84, 1, 0, 0, 0, 246, 247, 7, 3, 0, 0, 247, 86, 1, 0, 0, 0, 248, 249,
        7, 4, 0, 0, 249, 88, 1, 0, 0, 0, 250, 254, 5, 35, 0, 0, 251, 253, 9, 0, 0, 0, 252, 251,
        1, 0, 0, 0, 253, 256, 1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 254, 252, 1, 0, 0, 0, 255, 258,
        1, 0, 0, 0, 256, 254, 1, 0, 0, 0, 257, 259, 5, 13, 0, 0, 258, 257, 1, 0, 0, 0, 258, 259,
        1, 0, 0, 0, 259, 260, 1, 0, 0, 0, 260, 261, 5, 10, 0, 0, 261, 262, 6, 44, 0, 0, 262, 90,
        1, 0, 0, 0, 263, 264, 7, 5, 0, 0, 264, 265, 1, 0, 0, 0, 265, 266, 6, 45, 1, 0, 266, 92,
        1, 0, 0, 0, 11, 0, 201, 207, 214, 220, 222, 231, 233, 244, 254, 258, 2, 1, 44, 0, 6,
        0, 0
    ]


class SimpleWorkflowLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    Digits = 34
    Identifier = 35
    Sign = 36
    STRING = 37
    STRING_DOUBLE_QUOTE = 38
    STRING_QUOTE = 39
    LINE_COMMENT = 40
    WS = 41

    channelNames = [u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = ["<INVALID>",
                    "';'", "'set'", "'='", "'for'", "'('", "'in'", "')'", "'{'",
                    "'}'", "'if'", "'else'", "','", "'+'", "'-'", "'*'", "'/'",
                    "'%'", "'&&'", "'||'", "'=='", "'!='", "'<='", "'>='", "'>'",
                    "'<'", "'!'", "'connect'", "'to'", "'->'", "'.'", "'flowmodule'",
                    "'flowdata'", "'e'"]

    symbolicNames = ["<INVALID>",
                     "Digits", "Identifier", "Sign", "STRING", "STRING_DOUBLE_QUOTE",
                     "STRING_QUOTE", "LINE_COMMENT", "WS"]

    ruleNames = ["T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6",
                 "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13",
                 "T__14", "T__15", "T__16", "T__17", "T__18", "T__19",
                 "T__20", "T__21", "T__22", "T__23", "T__24", "T__25",
                 "T__26", "T__27", "T__28", "T__29", "T__30", "T__31",
                 "T__32", "Digits", "Identifier", "Sign", "STRING", "STRING_DOUBLE_QUOTE",
                 "STRING_QUOTE", "NO_QUOTE", "NO_DOUBLE_QUOTE", "LETTER_DIGIT",
                 "DIGIT", "LETTER", "LINE_COMMENT", "WS"]

    grammarFileName = "SimpleWorkflow.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(
            self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None

    def action(self, localctx: RuleContext, ruleIndex: int, actionIndex: int):
        if self._actions is None:
            actions = dict()
            actions[44] = self.LINE_COMMENT_action
            self._actions = actions
        action = self._actions.get(ruleIndex, None)
        if action is not None:
            action(localctx, actionIndex)
        else:
            raise Exception("No registered action for:" + str(ruleIndex))

    def LINE_COMMENT_action(self, localctx: RuleContext, actionIndex: int):
        if actionIndex == 0:
            skip()
